import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import {  RootState } from 'store/store';

// import { ajaxCoupang } from '../../api/api';

const initialState: RootState = {
  status: {
    coupang: 'idle',
    daaangn: 'idle',
    homenshopping: 'idle',
  },
  items: {
    coupang: [],
    daaangn: [],
    homenshopping: [],
  },
};

// const coupangAsync = createAsyncThunk('mallitems/COUPANG', async (query) => {
//   const response = await ajaxCoupang({ query });
//   return response.data;
// });

// const coupangAsync = async (query: string) => {
//   const response = await ajaxCoupang({ query });
//   return response.data;
// };

const mallItemSlice = createSlice({
  name: 'mallitems',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    SETITEM_COUPANG: (
      state,
      action: PayloadAction<{ coupang: MallItem[] }>
    ) => {
      const nextState = state;
      nextState.status.coupang = 'idle';
      nextState.items.coupang = action.payload;
    },
    SETITEM_DAAANGN: (state, action) => {
      const nextState = state;
      nextState.status.daaangn = 'idle';
      nextState.items.daaangn = action.payload;
    },
    SETITEM_HOMEANDSHOPPING: (state, action) => {
      const nextState = state;
      nextState.status.homenshopping = 'idle';
      nextState.items.homenshopping = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: (builder) => {
  //   builder
  //     .addCase(coupangAsync.pending, (state) => {
  //       const nextState = state;
  //       nextState.status.coupang = 'loading';
  //     })
  //     .addCase(coupangAsync.fulfilled, (state) => {
  //       const nextState = state;
  //       nextState.status.coupang = 'idle';
  //     });
  // },
});

export default mallItemSlice.reducer;
export const { SETITEM_COUPANG, SETITEM_DAAANGN, SETITEM_HOMEANDSHOPPING } =
  mallItemSlice.actions;
